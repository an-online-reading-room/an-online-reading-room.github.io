
<div id="app"
      class="flex flex-col align-items-center gap-y-4 px-4 h-full">

  <div class="flex flex-row justify-between 
              w-full gap-x-base divide-x
              border">
    <input type="search" name="search-query" placeholder="Search for a story"
          class="flex-1 py-1 bg-primary text-sm px-2 focus:outline-none"
          v-model="term">
    <button class="w-1/10 bg-primary focus:outline-none" 
            @click="search">
      search
    </button>
  </div>
  
  <div class="list-container overflow-y-scroll pb-4
            flex flex-col gap-y-4">
    
      <div v-for="item in results">
				<a :href="'/stories/'+item.url" >
					<div class="px-3 py-3
										border border-black border-1
										text-center font-text
										inline-flex flex-col gap-y-1">
						<div class="text-base font-display">
							<h1>{% raw %}{{ item.title }}{% endraw %}</h1>
						</div>
						<div class="text-sm" >
							<p> {% raw %}{{ item.author }}{% endraw %} </p>
						</div>
						<div class="text-sm">
							<p> {% raw %}{{ item.location }}{% endraw %} </p>
						</div>
						<div class="text-sm">
							<p> {% raw %}{{ item.description }}{% endraw %} </p>
						</div>
						
					</div>
				</a>
			</div>
    
  </div>
  
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js" integrity="sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script>
const app = new Vue({
	el:'#app',
	data:{
		docs:null,
		idx:null,
		term:'',
		results:null
	},
	async created() {
		let result = await fetch('/index.json');
		docs = await result.json();
		// assign an ID so it's easier to look up later, it will be the same as index
		this.idx = lunr(function () {
			this.ref('id');
			this.field('title');
			this.field('description');
			docs.forEach(function (doc, idx) {
				doc.id = idx;
				this.add(doc); 
			}, this);
		});
		this.docs = docs;
    this.search()
	},
	computed: {
		noResults() {
			return this.results.length === 0;
		}
	},
	methods:{
		search() {
			console.log('search', this.term);
			let results = this.idx.search(this.term);
			// we need to add title, url from ref
			results.forEach(r => {
				r.title = this.docs[r.ref].title
				r.author = this.docs[r.ref].author
				r.location = this.docs[r.ref].location
				r.description = this.docs[r.ref].description
				r.url = this.docs[r.ref].url
			});
			this.results = results;
		}
	}
});
</script>
